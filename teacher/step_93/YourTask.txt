Ментор предлагает следующий план реализации изменений в core
для смены направления зависимости:  /core <- /rest/v1 and /web/v1:

1. Создать пакет /corev2.
Идея заключается в том, чтобы создать постепенно новый /core
и потом удалить старый. Изменить старый постепенно не получится,
там надо менять всё сразу - а это слишком большие и не контролируемые
изменения в коде.

2. Создать пакет /corev2/api. В этом пакете реализовать новый API
для core, от которого будут зависеть в будущем REST и WEB.

3. Создать пакет /corev2/validations. В этом пакете создать валидации
основанные на использовании классов из пакета /corev2/api. Это можно
будет сделать используя copy/paste уже существующих валидаций из
пакета /core/validations и перевода их на использование /corev2/api.

4. Создать пакет /corev2/underwriting. Скопировать туда код расчёта
премии из пакета /core/underwriting и перевести его на использование
/corev2/api.

5. Создать пакет /corev2/services. Скопировать туда код из пакета
/core/services и перевести его на использование /corev2/api.

6. Перевести /rest/v1 на использование пакета /corev2.

7. Перевести /web/v1 на использование пакета /corev2.

8. Реализовать /rest/v2 c использованием пакета /corev2.

9. Реализовать /web/v2 c использованием пакета /corev2.


Ментор выполнил первые два пункта плана.

Ваша задача: изучить структуру классов и их код в пакете /corev2/api.
При необходимости уточнить все возникшие вопросы у ментора.