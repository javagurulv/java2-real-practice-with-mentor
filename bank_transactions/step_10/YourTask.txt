Предлагаемый нами вариант решения задания из предыдущего шага
вы найдёте в классе:

org/javaguru/banktransactions/Transaction.java

и тест показывающий работу с ним:

org/javaguru/banktransactions/TransactionTest.java.

Сравните предложенное нами решение со своим.


Неизменяемые объекты (или immutable objects) привносят в
программирование на Java ряд преимуществ:

1. **Простота**: Неизменяемые объекты проще проектировать,
использовать и отлаживать, потому что их состояние, установленное
при создании, не меняется.

2. **Безопасность потоков**: Неизменяемые объекты являются
потоко безопасными по определению, так как их состояние не
может быть изменено после создания. Это устраняет необходимость
в синхронизации доступа к этим объектам в многопоточных приложениях.

3. **Надежность**: Так как состояние неизменяемого объекта
не может быть изменено, это исключает возможность появления
неожиданных ошибок или побочных эффектов из-за изменения состояния.

4. **Отсутствие необходимости в оборонительном копировании**:
Когда объект неизменяем, вы можете безопасно предоставлять прямой
доступ к его внутренним полям или возвращать сам объект, не беспокоясь
о том, что его состояние будет изменено.

5. **Повышенная производительность**: В некоторых сценариях
неизменяемые объекты могут ускорить выполнение программы,
так как определенные оптимизации становятся возможными благодаря
их неизменности.

6. **Хеширование**: Неизменяемые объекты идеально подходят
для использования в качестве ключей в структурах данных,
таких как HashMap, потому что их хеш-код остается стабильным
на протяжении всего срока службы объекта.

7. **Поддержка функционального программирования**:
Неизменяемость является ключевым элементом функционального
программирования, и она поддерживает концепции, такие как чистые
функции и отсутствие побочных эффектов.

Однако стоит учитывать, что создание большого числа неизменяемых
объектов может привести к повышенной нагрузке на сборщик мусора,
так как вместо изменения существующих объектов приходится создавать новые.

В целом, неизменяемые объекты могут сделать ваш код более простым,
безопасным и надежным, особенно в сложных или многопоточных приложениях.